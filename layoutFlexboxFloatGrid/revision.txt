layout:- content is arrange in some way 
building a layout means arranging content in web page in some specific way 
page layout and component layout

3way to build layout:- 
Float :- older 
Flexbox :- modern (better for one D component or row based component)
Css Grid :- complete 2d 


=================================================================
copy older code inside here to understand this propety


once we declare some class float then the content after it start floating around it.

/*  Floats */
.author-img {
  float: left;
  margin: 10px 10px;
}
.author {
  padding-left: 20px;
  padding-top: 10px;
  float: left;
}

h1 {
  float: left;
}
nav {
  float: right;
}

/* when all children of an parent are in float propety then it height is collapsed or become 0 */

text and inline element wrape around the float element 

to solve collapsing issue we use 
.clear{ 
  clear: both; 
  clear: left;
  clear: right;
  // first clear the empty div and then give clear class 
  //this is how we clear the float
}
we don't want to fill our html page with so we don't use this practice we use different tachniq.


we give class = clearfix
.clearfix::after {
  clear: both;
  content: "";
  display: block;
}
=====================

box sizing : border box;
it allow us to make height and width equal to the actual height and width we provide to elmenet.
it does not add the mergin and padding into cosideration.

it change the height and width of the element and adjust it with the padding and margine.


====================

flex-box:-
display: flex;

if we give flex to parent class and all its child become verticle from horizontal.
All child are called flex item.
vertically and horizontally they take equal space as much as they require. 

but if i take height = 20px for even singal item then all item take equal height of 20px


  .container {
        display: flex;
        align-items: center;//for vertical align
        justify-content: center;// for horizontal align 
        justify-content: space-between;
    }

flexbox terminology;- 
Flex container
Flex items
main axis ==>>
cross axis ^
 ==================
 property of flex container:- 
 gap: 0; create space b/w items 
 justify content; align item along main axis
 align item ; align item along cross axis 
flex direction; direction along main axis
flex wrap;
align-content;
===================
property of flex item:-
align self
flex grow
flex shrink
flex basis
flex 

orderd: -1 to take item first position


====================================
css grid:-
  display: grid;
 grid-template-columns: 200px 200px 100px 100px;
grid-template-rows: 300px 200px;
   /* gap: 20px; */
  column-gap: 30px;
 row-gap: 60px;

=====================================

css grid terminology:-
column axis ^
row axis -->
grid container
grid items 
grid lines lines between grid items 

====================================
 grid container property:- 
 grid-template-row <track size>
 grid-template-column <track size>
row-gap
column-gap
justified-item;
align-item;
justified contenta
align-content
=====================================
grid item property:-
grid column
grid raw
justified self
align self
================================



  